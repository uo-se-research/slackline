# document, min length 3
document ::= (prolog | EMPTY) (misc)* element (misc)* ;

# prolog, min length 3
prolog ::= XMLDeclOpen (attribute)* "?>" ;

# misc, min length 1
misc ::= (COMMENT | "?>" | SEA_WS) ;

# element, min length 3
element ::= ( "<" Name (attribute)* ">" content "<" "/" Name ">"
	| "<" Name (attribute)* "/>") ;

# XMLDeclOpen, min length 2
XMLDeclOpen ::= "<?xml" S ;

# attribute, min length 4
attribute ::= Name "=" STRING ;

# content, min length 0
content ::= (chardata | EMPTY) ((element | reference | CDATA | "?>" | COMMENT) (chardata | EMPTY))* ;

# chardata, min length 1
chardata ::= (TEXT | SEA_WS) ;

# reference, min length 3
reference ::= (EntityRef | CharRef) ;

# CDATA, min length 2
CDATA ::= "<![CDATA[" (TEXT)* "]]>" ;

# COMMENT, min length 2
COMMENT ::= "<!--" (TEXT)* "-->" ;

# Name, min length 1
Name ::= NameStartChar (NameChar)* ;

# EntityRef, min length 3
EntityRef ::= "&" Name ";" ;

# CharRef, min length 3
CharRef ::= ("&#" DIGIT (DIGIT)* ";" | "&#x" HEXDIGIT (HEXDIGIT)* ";") ;

# STRING, min length 2
STRING ::= "\"" (("a" | "b" | "c"))* "\"" ;

# TEXT, min length 1
TEXT ::= ("a" | "b" | "c" | "d" | "e") ;

# SEA_WS, min length 1
SEA_WS ::= (" " | "\t" | ("\r" | EMPTY) "\n") ((" " | "\t" | ("\r" | EMPTY) "\n"))* ;

# DIGIT, min length 1
DIGIT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9") ;

# HEXDIGIT, min length 1
HEXDIGIT ::= ( ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")
	| ("A" | "B" | "C" | "D" | "E" | "F")
	| ("a" | "b" | "c" | "d" | "e" | "f")) ;

# S, min length 1
S ::= (" " | "\t" | "\r" | "\n") ;

# NameStartChar, min length 1
NameStartChar ::= ( ("a" | "b" | "c" | "d")
	| ("\u2070")
	| ("\u218f")
	| ("\u2c00")
	| ("\u2fef" | "\u3001" | "\ud7ff")
	| ("\uf900")
	| ("\ufdcf")
	| ("\ufdf0")
	| ("\ufffd")) ;

# NameChar, min length 1
NameChar ::= ( NameStartChar
	| "-"
	| "_"
	| "."
	| DIGIT
	| "\xb7"
	| [\u0300..\u036F]
	| "\u203f"
	| "\u2040") ;

# EMPTY, min length 0
EMPTY ::= /* empty */ ;


